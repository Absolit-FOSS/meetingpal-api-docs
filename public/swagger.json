{
  "swagger": "2.0",
  "info": {
    "title": "MeetingPal API",
    "description": "This is my API documentation",
    "version": "1.0"
  },
  "host": "localhost:5173",
  "basePath": "/api/v1",
  "tags": [
    {
      "name": "users",
      "description": "Operations about users"
    }
  ],
  "securityDefinitions": {
    "bearerAuth": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header",
      "description": "JWT Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\""
    }
  },
  "paths": {
    "/auth/login": {
      "post": {
        "summary": "Login User",
        "description": "Logs user in and generates an access token.",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "User login credentials",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": { "type": "string" },
                "password": { "type": "string" }
              },
              "required": ["email", "password"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User found and returns token",
            "schema": {
              "type": "object",
              "properties": {
                "message": { "type": "string" },
                "accessToken": { "type": "string" }
              }
            }
          },
          "400": {
            "description": "Client content error"
          },
          "401": {
            "description": "Not authorized"
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/attendees/make-call-admin": {
      "post": {
        "summary": "Make user admin on call.",
        "description": "Make a user admin on the voice call for a meeting.",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "attendeeId": { "type": "string" },
                "meetingId": { "type": "string" },
                "makeAdmin": { "type": "boolean" }
              },
              "required": ["attendeeId", "meetingId", "makeAdmin"]
            }
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Attendee set as admin",
            "schema": {
              "type": "object",
              "properties": {
                "message": { "type": "string" }
              }
            }
          },
          "400": {
            "description": "Client content error"
          },
          "401": {
            "description": "Not authorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }

        }
      }
    }
  },
  "/attendees/add-to-panel": {
      "post": {
        "summary": "Adds a attendee to the panel.",
        "description": "Adds an attendee to the panel in the meeting.",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "attendeeId": { "type": "string" },
                "meetingId": { "type": "string" },
                "addToPanel": { "type": "boolean" }
              },
              "required": ["attendeeId", "meetingId", "addToPanel"]
            }
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Attendee added to the panel",
            "schema": {
              "type": "object",
              "properties": {
                "message": { "type": "string" }
              }
            }
          },
          "400": {
            "description": "Client content error"
          },
          "401": {
            "description": "Not authorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }

        }
      }
    },
  "definitions": {
    "User": {
      "type": "object",
      "properties": {
        "id": { "type": "integer" },
        "name": { "type": "string" }
      }
    }
  }
}
